from aiogram import Dispatcher, executor, types
from aiogram.dispatcher import FSMContext
from aiogram.types.input_media import InputMedia
from aiogram.dispatcher.filters import Text

from tgbot.misc.states import UserStates
from tgbot.keyboards.inline import get_inline_user, MarkupName

async def start(message: types.Message):
    await message.bot.send_chat_action(message.chat.id, 'typing')
    await message.answer('''<b>üëãüèª –ü—Ä–∏–≤–µ—Ç! –Ø –≤–∞—à –Ω–∞–¥–µ–∂–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –≤ –∞–Ω–∞–ª–∏–∑–µ —Ç–æ–≤–∞—Ä–æ–≤ —Å –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤ Wildberries –∏ Ozon.</b> 
    
–ß—Ç–æ –≤—ã –º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å –±–ª–∞–≥–æ–¥–∞—Ä—è –º–Ω–µ:

üîπ –ú–µ—Å—è—á–Ω—ã–π –æ–±–æ—Ä–æ—Ç —Ç–æ–≤–∞—Ä–∞;
üîπ –ù–∞—Å–∫–æ–ª—å–∫–æ —Ç–æ–≤–∞—Ä –ø–æ–ø—É–ª—è—Ä–µ–Ω –ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å –¥—Ä—É–≥–∏–º–∏ —Ç–æ–≤–∞—Ä–∞–º–∏;
üîπ –¢–æ–≤–∞—Ä–Ω—ã–µ –æ—Å—Ç–∞—Ç–∫–∏ –∏ –Ω–∞ –∫–∞–∫–∏—Ö —Å–∫–ª–∞–¥–∞—Ö –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —Ç–æ–≤–∞—Ä;
üîπ –ü–æ –∫–∞–∫–æ–π —Ü–µ–Ω–µ —Ç–æ–≤–∞—Ä –ø—Ä–æ–¥–∞–≤–∞–ª—Å—è –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 2 –Ω–µ–¥–µ–ª–∏, –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–π —Ü–µ–Ω—ã;
üîπ –ü–æ–∑–∏—Ü–∏—é —Ç–æ–≤–∞—Ä–∞ –ø–æ –∑–∞–ø—Ä–æ—Å—É;
üîπ –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤, –±—ã—Å—Ç—Ä–æ –Ω–∞–±–∏—Ä–∞—é—â–∏—Ö —Å–ø—Ä–æ—Å''',
parse_mode="html")
    await message.answer('''<b>üëãüèª –ü—Ä–∏–≤–µ—Ç! –Ø –≤–∞—à –Ω–∞–¥–µ–∂–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –≤ –∞–Ω–∞–ª–∏–∑–µ —Ç–æ–≤–∞—Ä–æ–≤ —Å –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤ Wildberries –∏ Ozon.</b> 

    –ß—Ç–æ –≤—ã –º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å –±–ª–∞–≥–æ–¥–∞—Ä—è –º–Ω–µ:

    üîπ –ú–µ—Å—è—á–Ω—ã–π –æ–±–æ—Ä–æ—Ç —Ç–æ–≤–∞—Ä–∞;
    üîπ –ù–∞—Å–∫–æ–ª—å–∫–æ —Ç–æ–≤–∞—Ä –ø–æ–ø—É–ª—è—Ä–µ–Ω –ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å –¥—Ä—É–≥–∏–º–∏ —Ç–æ–≤–∞—Ä–∞–º–∏;
    üîπ –¢–æ–≤–∞—Ä–Ω—ã–µ –æ—Å—Ç–∞—Ç–∫–∏ –∏ –Ω–∞ –∫–∞–∫–∏—Ö —Å–∫–ª–∞–¥–∞—Ö –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —Ç–æ–≤–∞—Ä;
    üîπ –ü–æ –∫–∞–∫–æ–π —Ü–µ–Ω–µ —Ç–æ–≤–∞—Ä –ø—Ä–æ–¥–∞–≤–∞–ª—Å—è –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 2 –Ω–µ–¥–µ–ª–∏, –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–π —Ü–µ–Ω—ã;
    üîπ –ü–æ–∑–∏—Ü–∏—é —Ç–æ–≤–∞—Ä–∞ –ø–æ –∑–∞–ø—Ä–æ—Å—É;
    üîπ –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤, –±—ã—Å—Ç—Ä–æ –Ω–∞–±–∏—Ä–∞—é—â–∏—Ö —Å–ø—Ä–æ—Å''',
                         parse_mode="html",
                         reply_markup=markup)

async def login(call: types.CallbackQuery, state: FSMContext):
    print("SSSS")
    await UserStates.registration_password.set()
    await call.message.answer(
        '<i>–ü—Ä–∏–¥—É–º–∞–π—Ç–µ –∏ –≤–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω:</i>',
        parse_mode='html')

async def password(message: types.CallbackQuery, state: FSMContext):
    await message.answer(
        '<i>–ü—Ä–∏–¥—É–º–∞–π—Ç–µ –∏ –≤–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å:</i>',
        parse_mode='html')

def user(dp: Dispatcher):
    dp.register_message_handler(start, commands="start", state='*')
    dp.register_callback_query_handler(login, Text(startswith="registration_login"), state='*')
    dp.register_message_handler(password, state=UserStates.registration_password)

